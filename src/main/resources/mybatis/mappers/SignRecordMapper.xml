<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanzhou.wanshou.dao.SignRecordMapper">
    <resultMap id="BaseResultMap" type="com.lanzhou.wanshou.entity.SignRecord">
        <constructor>
            <idArg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <idArg column="sign_time" javaType="java.util.Date" jdbcType="DATE"/>
            <idArg column="subject_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="subject_period" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="target_amount" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="sign_amount" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="subject_sort" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="subject_select_date" javaType="java.util.Date" jdbcType="DATE"/>
            <arg column="subject_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
      user_id, sign_time, subject_id, subject_period, target_amount, sign_amount, subject_sort,
      subject_select_date
    </sql>

    <select id="selectByPrimaryKey" parameterType="com.lanzhou.wanshou.entity.SignRecordKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sign_record
        where user_id = #{userId,jdbcType=INTEGER}
        and sign_time = #{signTime,jdbcType=DATE}
        and subject_id = #{subjectId,jdbcType=INTEGER}
    </select>

    <select id="querySubjectSelect" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
            ss.user_id,
            ss.sign_time,
            ss.subject_id,
            ss.subject_period,
            ss.target_amount,
            ss.sign_amount,
            ss.subject_sort,
            ss.subject_select_date,
            dd.name as subject_name
        FROM
        (
            SELECT
                user_id,
                subject_id,
                sign_amount,
                subject_sort,
                sign_time,
                subject_select_date,
                subject_period,
                target_amount,
                CASE
                subject_period
                WHEN 1 THEN
                ( SELECT DATE_FORMAT( date_sub( curdate(), INTERVAL - 7 DAY ), '%Y-%m-%d' ) AS end_time )
                WHEN 2 THEN
                ( SELECT DATE_FORMAT( date_sub( curdate(), INTERVAL - 31 DAY ), '%Y-%m-%d' ) AS end_time )
                WHEN 3 THEN
                ( SELECT DATE_FORMAT( date_sub( curdate(), INTERVAL - 365 DAY ), '%Y-%m-%d' ) AS end_time )
                END AS end_time
            FROM
                sign_record
            WHERE
                user_id = #{userId,jdbcType=INTEGER}
        ) ss

        INNER JOIN subject_info dd
        on ss.subject_id=dd.id
        WHERE
        1=1
        AND <![CDATA[ curdate() >= ss.subject_select_date ]]>
        AND <![CDATA[ curdate()<= ss.end_time ]]>
        ORDER BY
        ss.subject_sort
    </select>

    <delete id="deleteByPrimaryKey" parameterType="com.lanzhou.wanshou.entity.SignRecordKey">
        delete from sign_record
        where user_id = #{userId,jdbcType=INTEGER}
          and sign_time = #{signTime,jdbcType=DATE}
          and subject_id = #{subjectId,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.lanzhou.wanshou.entity.SignRecord">
      insert into sign_record (user_id, sign_time, subject_id,
        subject_period, target_amount, sign_amount,
        subject_sort, subject_select_date)
      values (#{userId,jdbcType=INTEGER}, #{signTime,jdbcType=DATE}, #{subjectId,jdbcType=INTEGER},
        #{subjectPeriod,jdbcType=VARCHAR}, #{targetAmount,jdbcType=BIGINT}, #{signAmount,jdbcType=BIGINT},
        #{subjectSort,jdbcType=INTEGER}, #{subjectSelectDate,jdbcType=DATE})
    </insert>

    <insert id="insertByList" parameterType="java.util.List">
        insert into sign_record (user_id, sign_time, subject_id,
        subject_period, target_amount, sign_amount,
        subject_sort, subject_select_date)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userId,jdbcType=INTEGER}, #{item.signTime,jdbcType=DATE}, #{item.subjectId,jdbcType=INTEGER},
            #{item.subjectPeriod,jdbcType=VARCHAR}, #{item.targetAmount,jdbcType=BIGINT},
            #{item.signAmount,jdbcType=BIGINT},
            #{item.subjectSort,jdbcType=INTEGER}, #{item.subjectSelectDate,jdbcType=DATE})
        </foreach>
    </insert>

    <insert id="insertSelective" parameterType="com.lanzhou.wanshou.entity.SignRecord">
        insert into sign_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="signTime != null">
                sign_time,
            </if>
            <if test="subjectId != null">
                subject_id,
            </if>
            <if test="subjectPeriod != null">
                subject_period,
            </if>
            <if test="targetAmount != null">
                target_amount,
            </if>
            <if test="signAmount != null">
                sign_amount,
            </if>
            <if test="subjectSort != null">
                subject_sort,
            </if>
            <if test="subjectSelectDate != null">
                subject_select_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="signTime != null">
                #{signTime,jdbcType=DATE},
            </if>
            <if test="subjectId != null">
                #{subjectId,jdbcType=INTEGER},
            </if>
            <if test="subjectPeriod != null">
                #{subjectPeriod,jdbcType=VARCHAR},
            </if>
            <if test="targetAmount != null">
                #{targetAmount,jdbcType=BIGINT},
            </if>
            <if test="signAmount != null">
                #{signAmount,jdbcType=BIGINT},
            </if>
            <if test="subjectSort != null">
                #{subjectSort,jdbcType=INTEGER},
            </if>
            <if test="subjectSelectDate != null">
                #{subjectSelectDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.lanzhou.wanshou.entity.SignRecord">
        update sign_record
        <set>
            <if test="subjectPeriod != null">
                subject_period = #{subjectPeriod,jdbcType=VARCHAR},
            </if>
            <if test="targetAmount != null">
                target_amount = #{targetAmount,jdbcType=BIGINT},
            </if>
            <if test="signAmount != null">
                sign_amount = #{signAmount,jdbcType=BIGINT},
            </if>
            <if test="subjectSort != null">
                subject_sort = #{subjectSort,jdbcType=INTEGER},
            </if>
            <if test="subjectSelectDate != null">
                subject_select_date = #{subjectSelectDate,jdbcType=DATE},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
        and sign_time = #{signTime,jdbcType=DATE}
        and subject_id = #{subjectId,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.lanzhou.wanshou.entity.SignRecord">
        update sign_record
        set subject_period = #{subjectPeriod,jdbcType=VARCHAR},
          target_amount = #{targetAmount,jdbcType=BIGINT},
          sign_amount = #{signAmount,jdbcType=BIGINT},
          subject_sort = #{subjectSort,jdbcType=INTEGER},
          subject_select_date = #{subjectSelectDate,jdbcType=DATE}
        where user_id = #{userId,jdbcType=INTEGER}
          and sign_time = #{signTime,jdbcType=DATE}
          and subject_id = #{subjectId,jdbcType=INTEGER}
    </update>
</mapper>